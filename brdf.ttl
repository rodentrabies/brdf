@base <http://github.com/rodentrabies/brdf>.

@prefix rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix xsd:  <http://www.w3.org/2001/XMLSchema#>.
@prefix owl:  <http://www.w3.org/2002/07/owl#>.


#-------------------------------------------------------------------------------
# Block is a class of entities that aggregate Transactions.

<#Block>
        rdf:type     rdfs:Class;
        rdfs:comment "Set of transactions along with additional metadata.".

<#blockHeight>
        rdf:type     rdfs:Property;
        rdfs:comment "Index of a block in the chain, starting from 0.";
        rdfs:domain  <#Block>;
        rdfs:range   xsd:integer.

<#blockHash>
        rdf:type     rdfs:Property;
        rdfs:comment "Hex-encoded double-SHA256 of the block header that is used in PoW to chain blocks.";
        rdfs:domain  <#Block>;
        rdfs:range   xsd:string.

<#blockVersion>
        rdf:type     rdfs:Property;
        rdfs:comment "Version of the block which represents a set of supported features.";
        rdfs:domain  <#Block>;
        rdfs:range   xsd:integer.

<#blockMerkleRoot>
        rdf:type    rdfs:Property;
        rdfs:domain <#Block>;
        rdfs:range  xsd:string.

<#blockDifficulty>
        rdf:type    rdfs:Property;
        rdfs:domain <#Block>;
        rdfs:range  xsd:integer.

<#blockTime>
        rdf:type     rdfs:Property;
        rdfs:comment "Date-time value at the moment of construction of a block.";
        rdfs:domain  <#Block>;
        rdfs:range   xsd:dateTime.

<#blockTxCount>
        rdf:type     rdfs:Property;
        rdfs:comment "Number of transactions in a block.";
        rdfs:domain  <#Block>;
        rdfs:range   xsd:integer.

<#blockPreviousBlock>
        rdf:type      rdfs:Property;
        rdfs:comment  "Introduce ordering into set of Bitcoin blocks.";
        rdfs:domain   <#Block>;
        rdfs:range    <#Block>.

<#blockNextBlock>
        rdf:type      rdfs:Property;
        rdfs:comment  "Inverse of blockPreviousBlock property.";
        rdfs:domain   <#Block>;
        rdfs:range    <#Block>;
        owl:inverseOf <#prevBlock>.

<#blockTx>
        rdf:type     rdfs:Property;
        rdfs:comment "Tx-Block membership relation.";
        rdfs:domain  <#Block>;
        rdfs:range   <#Tx>.



#-------------------------------------------------------------------------------
# Tx is a class of entities that contains transaction metadata and sets of
# transaction inputs and outputs.

<#Tx>
        rdf:type     rdfs:Class;
        rdfs:comment "Recorded change of the UTXO set.".

<#txIndex>
        rdf:type rdfs:Property;
        rdfs:comment "Index of the given transaction within its block.";
        rdfs:range xsd:integer.

<#txID>
        rdf:type     rdfs:Property;
        rdfs:comment "Hash of the transaction which is used to uniquely identify it.";
        rdfs:domain  <#Tx>;
        rdfs:range   xsd:string.

<#txVersion>
        rdf:type     rdfs:Property;
        rdfs:comment "Version of the transaction representing the set of supported features.";
        rdfs:domain  <#Tx>;
        rdfs:range   xsd:integer.

<#txSize>
        rdf:type     rdfs:Property;
        rdfs:comment "Size of the transaction in bytes.";
        rdfs:domain  <#Tx>;
        rdfs:range   xsd:integer.

<#txVSize>
        rdf:type    rdfs:Property;
        rdfs:domain <#Tx>;
        rdfs:range  xsd:integer.

<#txWeight>
        rdf:type    rdfs:Property;
        rdfs:domain <#Tx>;
        rdfs:range  xsd:integer.

<#txLockTime>
        rdf:type     rdfs:Property;
        rdfs:comment "Index of the minimum block or unixtime this transaction is allowed to be included in the block.";
        rdfs:domain  <#Tx>;
        rdfs:range   rdf:integer.

<#txInputCount>
        rdf:type     rdfs:Property;
        rdfs:comment "Number of Inputs a transaction has.";
        rdfs:domain  <#Tx>;
        rdfs:range   xsd:integer.

<#txInput>
        rdf:type     rdfs:Property;
        rdfs:comment "Input-Tx membership relation.";
        rdfs:domain  <#Tx>;
        rdfs:range   <#Input>.

<#txOutputCount>
        rdf:type     rdfs:Property;
        rdfs:comment "Number of Outputs a transaction has.";
        rdfs:domain  <#Tx>;
        rdfs:range   xsd:integer.

<#txOutput>
        rdf:type     rdfs:Property;
        rdfs:comment "Output-Tx membership relation.";
        rdfs:domain  <#Tx>;
        rdfs:range   <#Output>.

#-------------------------------------------------------------------------------
# Output represents an abstract chunk of value in the Bitcoin system
# and consists of the integer amount of atomic bitcoin units and a
# locking script.

<#Output>
        rdf:type     rdfs:Class;
        rdfs:comment "Value representation within Bitcoin system.".

<#outputIndex>
        rdf:type rdfs:Property;
        rdfs:comment "Index of the given output within its transaction.";
        rdfs:range xsd:integer.

<#outputAmount>
        rdf:type     rdfs:Property;
        rdfs:comment "Amount of atomic units locked in this output.";
        rdfs:domain  <#Output>;
        rdfs:range   xsd:integer.

<#outputScript>
        rdf:type     rdfs:Property;
        rdfs:comment "Script that describes an unlocking condition of the given output.";
        rdfs:domain  <#Output>;
        rdfs:range   xsd:string.

<#outputType>
        rdf:type     rdfs:Property;
        rdfs:comment "Type of the output if it is standard.";
        rdfs:domain  <#Output>;
        rdfs:range   xsd:string.

<#outputAddress>
        rdf:type     rdfs:Property;
        rdfs:comment "Address corresponding to the output if it is standard.";
        rdfs:domain  <#Output>;
        rdfs:range   xsd:string.

<#outputInput>
        rdf:type     rdfs:Property;
        rdfs:comment "Output-Input relation.";
        rdfs:domain  <#Output>;
        rdfs:range   <#Input>.

<#outputInputTx>
        rdf:type     rdfs:Property;
        rdfs:comment "Transaction for which an Output is an input.";
        rdfs:domain  <#Output>;
        rdfs:range   <#Tx>.




#-------------------------------------------------------------------------------
# Input is a reference to the existing unspent transaction output
# and an unlocking script for that output.

<#Input>
        rdf:type     rdfs:Class;
        rdfs:comment "Spent value representation within Bitcoin system.".

<#inputIndex>
        rdf:type rdfs:Property;
        rdfs:comment "Index of the given input within its transaction.";
        rdfs:range xsd:integer.

<#inputOutput>
        rdf:type     rdfs:Property;
        rdfs:comment "Output being spent by this input.";
        rdfs:domain  <#Input>;
        rdfs:range   <#Output>.

<#inputScript>
        rdf:type     rdfs:Property;
        rdfs:comment "Script that is appended to locking script in order to unlock the locked value when spending.";
        rdfs:domain  <#Input>;
        rdfs:range   xsd:string.

<#inputSequence>
        rdf:type     rdfs:Property;
        rdfs:domain  <#Input>;
        rdfs:range   xsd:integer.
